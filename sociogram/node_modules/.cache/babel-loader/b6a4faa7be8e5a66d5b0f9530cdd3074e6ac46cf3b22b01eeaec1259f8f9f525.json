{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"ViewComments\",\n  data() {\n    return {\n      post: {},\n      userName: undefined,\n      userImageUrl: undefined,\n      comment: \"\",\n      getComments: undefined\n    };\n  },\n  async created() {\n    this.post = JSON.parse(localStorage.getItem(\"post\"));\n    this.userName = localStorage.getItem(\"userName\");\n    this.userImageUrl = localStorage.getItem(\"userImageUrl\");\n    await axios.get(\"/instaPosts/comment/getComments/\" + this.post.postId, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        userId: localStorage.getItem(\"userId\")\n      }\n    }).then(res => {\n      this.getComments = res.data;\n      console.log(this.getComments);\n    });\n  },\n  emits: [\"parent-emit\"],\n  methods: {\n    async likePost() {\n      console.log(this.post.postId);\n      await axios.post(\"/instaPosts/post/likePost/\" + this.post.postId + \"/\" + localStorage.getItem(\"userId\"), {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\")\n        }\n      });\n      window.location.reload();\n    },\n    async handleSubmit() {\n      console.log(this.post.postId);\n      await axios.post(\"/instaPosts/comment/addComment\", {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\")\n        }\n      }, {\n        postId: this.post.postId,\n        userId: localStorage.getItem(\"userId\"),\n        commentText: this.comment\n      });\n      window.location.reload();\n    },\n    async openProfile() {\n      await axios.post(\"/instaUser/user/getProfileByUserId?userId=\" + this.post.userId, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\")\n        }\n      });\n      this.$router.push(\"/friendprofile\");\n      localStorage.setItem(\"imageURL\", this.userImageUrl);\n    }\n  }\n};","map":{"version":3,"mappings":";AA+HA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACA;IACA;IACA;IACA;IACA,YACAC;MACAC;QACAC;QACAC;MACA;IACA,GACAC;MACA;MACAC;IACA;EACA;EACAC;EACAC;IACA;MACAF;MACA,iBACA,+BACA,mBACA,MACAG,gCACA;QACAP;UACAC;UACAC;QACA;MACA,EACA;MACAM;IACA;IAEA;MACAJ;MACA,iBACA,kCACA;QACAJ;UACAC;UACAC;QACA;MACA,GACA;QACAO;QACAP;QACAQ;MACA,EACA;MACAF;IACA;IACA;MACA,iBACA,iEACA;QACAR;UACAC;UACAC;QACA;MACA,EACA;MACA;MACAK;IACA;EACA;AACA","names":["name","data","post","userName","userImageUrl","comment","getComments","get","headers","Authorization","userId","then","console","emits","methods","localStorage","window","postId","commentText"],"sourceRoot":"src/views","sources":["ViewComments.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"post-container\">\n      <div @click=\"openProfile(post, index)\" class=\"post-header\">\n        <p>\n          <img class=\"dp\" :src=\"userImageUrl\" alt=\"image not found\" />\n        </p>\n        <p class=\"username\">{{ userName }}</p>\n      </div>\n      <div class=\"post-content\">\n        <p>\n          <img\n            class=\"post-img\"\n            :src=\"post.filePostedURL\"\n            alt=\"image not found\"\n          />\n        </p>\n      </div>\n      <div class=\"post-footer\">\n        <div class=\"footer-actions\">\n          <img\n            class=\"heart\"\n            src=\"../assets/images/heart.png\"\n            alt=\"image not found\"\n            @click=\"likePost()\"\n          />\n          <img\n            class=\"comment\"\n            src=\"../assets/images/comment.png\"\n            alt=\"image not found\"\n          />\n          <img\n            class=\"share\"\n            src=\"../assets/images/send.png\"\n            alt=\"image not found\"\n          />\n        </div>\n        <div class=\"likes\">\n          <p v-if=\"post.likes === null\">0 likes</p>\n          <p v-else>{{ post.likes.length }} likes</p>\n        </div>\n        <div @click=\"showComments()\" class=\"view-comments\">\n          <p v-if=\"post.commentIds === null\">No comments</p>\n          <p v-else>View all {{ post.commentIds.length }} comments</p>\n        </div>\n        <div class=\"add-comment\">\n          <form @submit.prevent=\"handleSubmit(post)\">\n            <input\n              v-model=\"comment\"\n              type=\"text\"\n              placeholder=\"Add a comment...\"\n            />\n            <button>Post</button>\n          </form>\n        </div>\n      </div>\n    </div>\n    <div class=\"comments-container\">\n      <div class=\"container mt-5\">\n        <div class=\"row d-flex justify-content-center\">\n          <div class=\"col-md-8\">\n            <div\n              class=\"headings d-flex justify-content-between align-items-center mb-3\"\n            >\n              <h5>Unread comments(6)</h5>\n\n              <div class=\"buttons\">\n                <span class=\"badge bg-white d-flex flex-row align-items-center\">\n                  <span class=\"text-primary\">Comments \"ON\"</span>\n                  <div class=\"form-check form-switch\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      id=\"flexSwitchCheckChecked\"\n                      checked\n                    />\n                  </div>\n                </span>\n              </div>\n            </div>\n\n            <div class=\"card p-3\">\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <div class=\"user d-flex flex-row align-items-center\">\n                  <img\n                    src=\"https://i.imgur.com/hczKIze.jpg\"\n                    width=\"30\"\n                    class=\"user-img rounded-circle mr-2\"\n                  />\n                  <span\n                    ><small class=\"font-weight-bold text-primary\"\n                      >james_olesenn</small\n                    >\n                    <small class=\"font-weight-bold\"\n                      >Hmm, This poster looks cool</small\n                    ></span\n                  >\n                </div>\n\n                <small>2 days ago</small>\n              </div>\n\n              <div\n                class=\"action d-flex justify-content-between mt-2 align-items-center\"\n              >\n                <div class=\"reply px-4\">\n                  <small>Remove</small>\n                  <span class=\"dots\"></span>\n                  <small>Reply</small>\n                  <span class=\"dots\"></span>\n                  <small>Translate</small>\n                </div>\n\n                <div class=\"icons align-items-center\">\n                  <i class=\"fa fa-star text-warning\"></i>\n                  <i class=\"fa fa-check-circle-o check-icon\"></i>\n                </div>\n              </div>\n            </div>\n\n            \n              \n   \n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"ViewComments\",\n  data() {\n    return {\n      post: {},\n      userName: undefined,\n      userImageUrl: undefined,\n      comment: \"\",\n      getComments: undefined,\n    };\n  },\n  async created() {\n    this.post = JSON.parse(localStorage.getItem(\"post\"));\n    this.userName = localStorage.getItem(\"userName\");\n    this.userImageUrl = localStorage.getItem(\"userImageUrl\");\n    await axios\n      .get(\"/instaPosts/comment/getComments/\" + this.post.postId, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\"),\n        },\n      })\n      .then((res) => {\n        this.getComments = res.data;\n        console.log(this.getComments);\n      });\n  },\n  emits: [\"parent-emit\"],\n  methods: {\n    async likePost() {\n      console.log(this.post.postId);\n      await axios.post(\n        \"/instaPosts/post/likePost/\" +\n          this.post.postId +\n          \"/\" +\n          localStorage.getItem(\"userId\"),\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            userId: localStorage.getItem(\"userId\"),\n          },\n        }\n      );\n      window.location.reload();\n    },\n\n    async handleSubmit() {\n      console.log(this.post.postId);\n      await axios.post(\n        \"/instaPosts/comment/addComment\",\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            userId: localStorage.getItem(\"userId\"),\n          },\n        },\n        {\n          postId: this.post.postId,\n          userId: localStorage.getItem(\"userId\"),\n          commentText: this.comment,\n        }\n      );\n      window.location.reload();\n    },\n    async openProfile() {\n      await axios.post(\n        \"/instaUser/user/getProfileByUserId?userId=\" + this.post.userId,\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            userId: localStorage.getItem(\"userId\"),\n          },\n        }\n      );\n      this.$router.push(\"/friendprofile\");\n      localStorage.setItem(\"imageURL\", this.userImageUrl);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.body {\n  display: flex;\n}\n.comments-container {\n  display: flex;\n  flex-direction: column;\n}\n.post-container {\n  margin-left: 230px;\n  width: 460px;\n  margin-bottom: 15px;\n  /* margin-top: 200px; */\n  padding-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid lightgray;\n  /* border-radius: 5ps; */\n}\n.post-header {\n  width: 150px;\n  display: flex;\n  padding-bottom: 2px;\n}\n.post-header:hover {\n  cursor: pointer;\n}\n.dp {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n}\n.username {\n  padding-top: 8px;\n  padding-left: 8px;\n  font-weight: bold;\n}\n.post-img {\n  height: 450px;\n  width: 460px;\n  border-radius: 3px;\n  border: 1px solid lightgray;\n}\n.post-footer {\n  width: 460px;\n  display: flex;\n  flex-direction: column;\n}\n.footer-actions {\n  display: flex;\n}\n.heart {\n  padding: 8px 8px 8px 0px;\n  height: 24px;\n  width: 24px;\n}\n.heart:hover {\n  cursor: pointer;\n}\n.comment {\n  padding: 7px;\n  height: 27px;\n  width: 28px;\n}\n.share {\n  padding: 8px;\n  padding-top: 10px;\n  height: 24px;\n  width: 24px;\n}\n.likes {\n  display: flex;\n  font-weight: bold;\n  padding-top: 5px;\n}\n.view-comments {\n  padding-top: 5px;\n  display: flex;\n  font-size: 87%;\n  color: gray;\n  width: 150px;\n}\n.view-comments:hover {\n  cursor: pointer;\n}\n.add-comment {\n  padding-top: 5px;\n  display: flex;\n  font-size: 87%;\n  color: gray;\n}\n.add-comment form input {\n  width: 400px;\n  border: none;\n  text-decoration: none;\n}\ninput:focus {\n  outline: none;\n}\nbody {\n  background-color: #f7f6f6;\n}\n\n.card {\n  border: none;\n  box-shadow: 5px 6px 6px 2px #e9ecef;\n  border-radius: 4px;\n}\n\n.dots {\n  height: 4px;\n  width: 4px;\n  margin-bottom: 2px;\n  background-color: #bbb;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.badge {\n  padding: 7px;\n  padding-right: 9px;\n  padding-left: 16px;\n  box-shadow: 5px 6px 6px 2px #e9ecef;\n}\n\n.user-img {\n  margin-top: 4px;\n}\n\n.check-icon {\n  font-size: 17px;\n  color: #c3bfbf;\n  top: 1px;\n  position: relative;\n  margin-left: 3px;\n}\n\n.form-check-input {\n  margin-top: 6px;\n  margin-left: -24px !important;\n  cursor: pointer;\n}\n\n.form-check-input:focus {\n  box-shadow: none;\n}\n\n.icons i {\n  margin-left: 8px;\n}\n.reply {\n  margin-left: 12px;\n}\n\n.reply small {\n  color: #b7b4b4;\n}\n\n.reply small:hover {\n  color: green;\n  cursor: pointer;\n}\n</style>\n\n<div v-for=\"(comm, index) in getComments\" :key=\"index\">\n        <p>{{ comm.commentText }}</p>\n      </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}