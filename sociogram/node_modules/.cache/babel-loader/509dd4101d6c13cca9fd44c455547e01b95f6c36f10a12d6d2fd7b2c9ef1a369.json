{"ast":null,"code":"module.exports = function (hljs) {\n  var COMMENT_MODES = [hljs.COMMENT('--', '$'), hljs.COMMENT('{-', '-}', {\n    contains: ['self']\n  })];\n  var PRAGMA = {\n    className: 'pragma',\n    begin: '{-#',\n    end: '#-}'\n  };\n  var PREPROCESSOR = {\n    className: 'preprocessor',\n    begin: '^#',\n    end: '$'\n  };\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n  var LIST = {\n    className: 'container',\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [PRAGMA, PREPROCESSOR, {\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[_a-z][\\\\w\\']*'\n    })].concat(COMMENT_MODES)\n  };\n  var RECORD = {\n    className: 'container',\n    begin: '{',\n    end: '}',\n    contains: LIST.contains\n  };\n  return {\n    aliases: ['hs'],\n    keywords: 'let in if then else case of where do module import hiding ' + 'qualified type data newtype deriving class instance as default ' + 'infix infixl infixr foreign export ccall stdcall cplusplus ' + 'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n    // Top-level constructions.\n\n    {\n      className: 'module',\n      begin: '\\\\bmodule\\\\b',\n      end: 'where',\n      keywords: 'module where',\n      contains: [LIST].concat(COMMENT_MODES),\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      className: 'import',\n      begin: '\\\\bimport\\\\b',\n      end: '$',\n      keywords: 'import|0 qualified as hiding',\n      contains: [LIST].concat(COMMENT_MODES),\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      className: 'class',\n      begin: '^(\\\\s*)?(class|instance)\\\\b',\n      end: 'where',\n      keywords: 'class family instance where',\n      contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n    }, {\n      className: 'typedef',\n      begin: '\\\\b(data|(new)?type)\\\\b',\n      end: '$',\n      keywords: 'data family type newtype deriving',\n      contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD].concat(COMMENT_MODES)\n    }, {\n      className: 'default',\n      beginKeywords: 'default',\n      end: '$',\n      contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n    }, {\n      className: 'infix',\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE].concat(COMMENT_MODES)\n    }, {\n      className: 'foreign',\n      begin: '\\\\bforeign\\\\b',\n      end: '$',\n      keywords: 'foreign import export ccall stdcall cplusplus jvm ' + 'dotnet safe unsafe',\n      contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE].concat(COMMENT_MODES)\n    }, {\n      className: 'shebang',\n      begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n      end: '$'\n    },\n    // \"Whitespaces\".\n\n    PRAGMA, PREPROCESSOR,\n    // Literals and names.\n\n    // TODO: characters.\n    hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), {\n      begin: '->|<-'\n    } // No markup, relevance booster\n    ].concat(COMMENT_MODES)\n  };\n};","map":{"version":3,"names":["module","exports","hljs","COMMENT_MODES","COMMENT","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","concat","RECORD","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE"],"sources":["/Users/ayanyadav/node_modules/highlight.js/lib/languages/haskell.js"],"sourcesContent":["module.exports = function(hljs) {\n  var COMMENT_MODES = [\n    hljs.COMMENT('--', '$'),\n    hljs.COMMENT(\n      '{-',\n      '-}',\n      {\n        contains: ['self']\n      }\n    )\n  ];\n\n  var PRAGMA = {\n    className: 'pragma',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'preprocessor',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    className: 'container',\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'})\n    ].concat(COMMENT_MODES)\n  };\n\n  var RECORD = {\n    className: 'container',\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        className: 'module',\n        begin: '\\\\bmodule\\\\b', end: 'where',\n        keywords: 'module where',\n        contains: [LIST].concat(COMMENT_MODES),\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'import',\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import|0 qualified as hiding',\n        contains: [LIST].concat(COMMENT_MODES),\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n      },\n      {\n        className: 'typedef',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD].concat(COMMENT_MODES)\n      },\n      {\n        className: 'default',\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n      },\n      {\n        className: 'infix',\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE].concat(COMMENT_MODES)\n      },\n      {\n        className: 'foreign',\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE].concat(COMMENT_MODES)\n      },\n      {\n        className: 'shebang',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ].concat(COMMENT_MODES)\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}