{"ast":null,"code":"module.exports = function (hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var FUNCTION = {\n    className: 'function',\n    begin: IDENT_RE + '\\\\(',\n    returnBegin: true,\n    excludeEnd: true,\n    end: '\\\\('\n  };\n  var RULE = {\n    className: 'rule',\n    begin: /[A-Z\\_\\.\\-]+\\s*:/,\n    returnBegin: true,\n    end: ';',\n    endsWithParent: true,\n    contains: [{\n      className: 'attribute',\n      begin: /\\S/,\n      end: ':',\n      excludeEnd: true,\n      starts: {\n        className: 'value',\n        endsWithParent: true,\n        excludeEnd: true,\n        contains: [FUNCTION, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n          className: 'hexcolor',\n          begin: '#[0-9A-Fa-f]+'\n        }, {\n          className: 'important',\n          begin: '!important'\n        }]\n      }\n    }]\n  };\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'id',\n      begin: /\\#[A-Za-z0-9_-]+/\n    }, {\n      className: 'class',\n      begin: /\\.[A-Za-z0-9_-]+/\n    }, {\n      className: 'attr_selector',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$'\n    }, {\n      className: 'pseudo',\n      begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"']+/\n    }, {\n      className: 'at_rule',\n      begin: '@(font-face|page)',\n      lexemes: '[a-z-]+',\n      keywords: 'font-face page'\n    }, {\n      className: 'at_rule',\n      begin: '@',\n      end: '[{;]',\n      // at_rule eating first \"{\" is a good thing\n      // because it doesn’t let it to be parsed as\n      // a rule set but instead drops parser into\n      // the default mode which is how it should be.\n      contains: [{\n        className: 'keyword',\n        begin: /\\S+/\n      }, {\n        begin: /\\s/,\n        endsWithParent: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [FUNCTION, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n      }]\n    }, {\n      className: 'tag',\n      begin: IDENT_RE,\n      relevance: 0\n    }, {\n      className: 'rules',\n      begin: '{',\n      end: '}',\n      illegal: /\\S/,\n      contains: [hljs.C_BLOCK_COMMENT_MODE, RULE]\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","IDENT_RE","FUNCTION","className","begin","returnBegin","excludeEnd","end","RULE","endsWithParent","contains","starts","CSS_NUMBER_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_BLOCK_COMMENT_MODE","case_insensitive","illegal","lexemes","keywords","relevance"],"sources":["/Users/ayanyadav/node_modules/highlight.js/lib/languages/css.js"],"sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var FUNCTION = {\n    className: 'function',\n    begin: IDENT_RE + '\\\\(',\n    returnBegin: true,\n    excludeEnd: true,\n    end: '\\\\('\n  };\n  var RULE = {\n    className: 'rule',\n    begin: /[A-Z\\_\\.\\-]+\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: /\\S/, end: ':', excludeEnd: true,\n        starts: {\n          className: 'value',\n          endsWithParent: true, excludeEnd: true,\n          contains: [\n            FUNCTION,\n            hljs.CSS_NUMBER_MODE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n              className: 'hexcolor', begin: '#[0-9A-Fa-f]+'\n            },\n            {\n              className: 'important', begin: '!important'\n            }\n          ]\n        }\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'id', begin: /\\#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'attr_selector',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$'\n      },\n      {\n        className: 'pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"']+/\n      },\n      {\n        className: 'at_rule',\n        begin: '@(font-face|page)',\n        lexemes: '[a-z-]+',\n        keywords: 'font-face page'\n      },\n      {\n        className: 'at_rule',\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\S+/\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            contains: [\n              FUNCTION,\n              hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        className: 'rules',\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,QAAQ,GAAG,yBAAyB;EACxC,IAAIC,QAAQ,GAAG;IACbC,SAAS,EAAE,UAAU;IACrBC,KAAK,EAAEH,QAAQ,GAAG,KAAK;IACvBI,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,IAAI;IAChBC,GAAG,EAAE;EACP,CAAC;EACD,IAAIC,IAAI,GAAG;IACTL,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,kBAAkB;IAAEC,WAAW,EAAE,IAAI;IAAEE,GAAG,EAAE,GAAG;IAAEE,cAAc,EAAE,IAAI;IAC5EC,QAAQ,EAAE,CACR;MACEP,SAAS,EAAE,WAAW;MACtBC,KAAK,EAAE,IAAI;MAAEG,GAAG,EAAE,GAAG;MAAED,UAAU,EAAE,IAAI;MACvCK,MAAM,EAAE;QACNR,SAAS,EAAE,OAAO;QAClBM,cAAc,EAAE,IAAI;QAAEH,UAAU,EAAE,IAAI;QACtCI,QAAQ,EAAE,CACRR,QAAQ,EACRF,IAAI,CAACY,eAAe,EACpBZ,IAAI,CAACa,iBAAiB,EACtBb,IAAI,CAACc,gBAAgB,EACrBd,IAAI,CAACe,oBAAoB,EACzB;UACEZ,SAAS,EAAE,UAAU;UAAEC,KAAK,EAAE;QAChC,CAAC,EACD;UACED,SAAS,EAAE,WAAW;UAAEC,KAAK,EAAE;QACjC,CAAC;MAEL;IACF,CAAC;EAEL,CAAC;EAED,OAAO;IACLY,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EAAE,WAAW;IACpBP,QAAQ,EAAE,CACRV,IAAI,CAACe,oBAAoB,EACzB;MACEZ,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAC1B,CAAC,EACD;MACED,SAAS,EAAE,OAAO;MAAEC,KAAK,EAAE;IAC7B,CAAC,EACD;MACED,SAAS,EAAE,eAAe;MAC1BC,KAAK,EAAE,IAAI;MAAEG,GAAG,EAAE,IAAI;MACtBU,OAAO,EAAE;IACX,CAAC,EACD;MACEd,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE;IACT,CAAC,EACD;MACED,SAAS,EAAE,SAAS;MACpBC,KAAK,EAAE,mBAAmB;MAC1Bc,OAAO,EAAE,SAAS;MAClBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEhB,SAAS,EAAE,SAAS;MACpBC,KAAK,EAAE,GAAG;MAAEG,GAAG,EAAE,MAAM;MAAE;MACA;MACA;MACA;MACzBG,QAAQ,EAAE,CACR;QACEP,SAAS,EAAE,SAAS;QACpBC,KAAK,EAAE;MACT,CAAC,EACD;QACEA,KAAK,EAAE,IAAI;QAAEK,cAAc,EAAE,IAAI;QAAEH,UAAU,EAAE,IAAI;QACnDc,SAAS,EAAE,CAAC;QACZV,QAAQ,EAAE,CACRR,QAAQ,EACRF,IAAI,CAACc,gBAAgB,EAAEd,IAAI,CAACa,iBAAiB,EAC7Cb,IAAI,CAACY,eAAe;MAExB,CAAC;IAEL,CAAC,EACD;MACET,SAAS,EAAE,KAAK;MAAEC,KAAK,EAAEH,QAAQ;MACjCmB,SAAS,EAAE;IACb,CAAC,EACD;MACEjB,SAAS,EAAE,OAAO;MAClBC,KAAK,EAAE,GAAG;MAAEG,GAAG,EAAE,GAAG;MACpBU,OAAO,EAAE,IAAI;MACbP,QAAQ,EAAE,CACRV,IAAI,CAACe,oBAAoB,EACzBP,IAAI;IAER,CAAC;EAEL,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}