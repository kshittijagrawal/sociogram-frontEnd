{"ast":null,"code":"module.exports = function (hljs) {\n  var CPP_PRIMATIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n  var STRINGS = {\n    className: 'string',\n    variants: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      begin: '((u8?|U)|L)?\"'\n    }), {\n      begin: '(u8?|U)?R\"',\n      end: '\"',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\\'\\\\\\\\?.',\n      end: '\\'',\n      illegal: '.'\n    }]\n  };\n  var NUMBERS = {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\n    }, {\n      begin: hljs.C_NUMBER_RE\n    }]\n  };\n  var PREPROCESSOR = {\n    className: 'preprocessor',\n    begin: '#',\n    end: '$',\n    keywords: 'if else elif endif define undef warning error line ' + 'pragma ifdef ifndef',\n    contains: [{\n      begin: /\\\\\\n/,\n      relevance: 0\n    }, {\n      beginKeywords: 'include',\n      end: '$',\n      contains: [STRINGS, {\n        className: 'string',\n        begin: '<',\n        end: '>',\n        illegal: '\\\\n'\n      }]\n    }, STRINGS, NUMBERS, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n  };\n  var FUNCTION_TITLE = hljs.IDENT_RE + '\\\\s*\\\\(';\n  var CPP_KEYWORDS = {\n    keyword: 'int float while private char catch export virtual operator sizeof ' + 'dynamic_cast|10 typedef const_cast|10 const struct for static_cast|10 union namespace ' + 'unsigned long volatile static protected bool template mutable if public friend ' + 'do goto auto void enum else break extern using class asm case typeid ' + 'short reinterpret_cast|10 default double register explicit signed typename try this ' + 'switch continue inline delete alignof constexpr decltype ' + 'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary ' + 'atomic_bool atomic_char atomic_schar ' + 'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' + 'atomic_ullong',\n    built_in: 'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' + 'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set ' + 'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos ' + 'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' + 'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' + 'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' + 'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' + 'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' + 'vfprintf vprintf vsprintf',\n    literal: 'true false nullptr NULL'\n  };\n  return {\n    aliases: ['c', 'cc', 'h', 'c++', 'h++', 'hpp'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    contains: [CPP_PRIMATIVE_TYPES, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBERS, STRINGS, PREPROCESSOR, {\n      begin: '\\\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<',\n      end: '>',\n      keywords: CPP_KEYWORDS,\n      contains: ['self', CPP_PRIMATIVE_TYPES]\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: CPP_KEYWORDS\n    }, {\n      // Expression keywords prevent 'keyword Name(...) or else if(...)' from\n      // being recognized as a function definition\n      beginKeywords: 'new throw return else',\n      relevance: 0\n    }, {\n      className: 'function',\n      begin: '(' + hljs.IDENT_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n      returnBegin: true,\n      end: /[{;=]/,\n      excludeEnd: true,\n      keywords: CPP_KEYWORDS,\n      illegal: /[^\\w\\s\\*&]/,\n      contains: [{\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [hljs.TITLE_MODE],\n        relevance: 0\n      }, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRINGS, NUMBERS]\n      }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, PREPROCESSOR]\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","CPP_PRIMATIVE_TYPES","className","begin","STRINGS","variants","inherit","QUOTE_STRING_MODE","end","contains","BACKSLASH_ESCAPE","illegal","NUMBERS","C_NUMBER_RE","PREPROCESSOR","keywords","relevance","beginKeywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","FUNCTION_TITLE","IDENT_RE","CPP_KEYWORDS","keyword","built_in","literal","aliases","returnBegin","excludeEnd","TITLE_MODE"],"sources":["/Users/ayanyadav/node_modules/highlight.js/lib/languages/cpp.js"],"sourcesContent":["module.exports = function(hljs) {\n  var CPP_PRIMATIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  var STRINGS = {\n    className: 'string',\n    variants: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, { begin: '((u8?|U)|L)?\"' }),\n      {\n        begin: '(u8?|U)?R\"', end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.', end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  var NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)' },\n      { begin: hljs.C_NUMBER_RE }\n    ]\n  };\n\n  var PREPROCESSOR =       {\n    className: 'preprocessor',\n    begin: '#', end: '$',\n    keywords: 'if else elif endif define undef warning error line ' +\n              'pragma ifdef ifndef',\n    contains: [\n      {\n        begin: /\\\\\\n/, relevance: 0\n      },\n      {\n        beginKeywords: 'include', end: '$',\n        contains: [\n          STRINGS,\n          {\n            className: 'string',\n            begin: '<', end: '>',\n            illegal: '\\\\n',\n          }\n        ]\n      },\n      STRINGS,\n      NUMBERS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  var FUNCTION_TITLE = hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  var CPP_KEYWORDS = {\n    keyword: 'int float while private char catch export virtual operator sizeof ' +\n      'dynamic_cast|10 typedef const_cast|10 const struct for static_cast|10 union namespace ' +\n      'unsigned long volatile static protected bool template mutable if public friend ' +\n      'do goto auto void enum else break extern using class asm case typeid ' +\n      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n      'switch continue inline delete alignof constexpr decltype ' +\n      'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary ' +\n      'atomic_bool atomic_char atomic_schar ' +\n      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n      'atomic_ullong',\n    built_in: 'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n      'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set ' +\n      'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos ' +\n      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n      'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n      'vfprintf vprintf vsprintf',\n    literal: 'true false nullptr NULL'\n  };\n\n  return {\n    aliases: ['c', 'cc', 'h', 'c++', 'h++', 'hpp'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    contains: [\n      CPP_PRIMATIVE_TYPES,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS,\n      PREPROCESSOR,\n      {\n        begin: '\\\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<', end: '>',\n        keywords: CPP_KEYWORDS,\n        contains: ['self', CPP_PRIMATIVE_TYPES]\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: CPP_KEYWORDS\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...) or else if(...)' from\n        // being recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + hljs.IDENT_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n        returnBegin: true, end: /[{;=]/,\n        excludeEnd: true,\n        keywords: CPP_KEYWORDS,\n        illegal: /[^\\w\\s\\*&]/,\n        contains: [\n          {\n            begin: FUNCTION_TITLE, returnBegin: true,\n            contains: [hljs.TITLE_MODE],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          PREPROCESSOR\n        ]\n      }\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}