{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CommentsLevel1 from \"@/components/CommentsLevel1.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"ViewComments\",\n  data() {\n    return {\n      post: {},\n      userName: undefined,\n      userImageUrl: undefined,\n      comment: \"\",\n      getComments: undefined\n    };\n  },\n  components: {\n    CommentsLevel1\n  },\n  async created() {\n    this.post = JSON.parse(localStorage.getItem(\"post\"));\n    this.userName = localStorage.getItem(\"userName\");\n    this.userImageUrl = localStorage.getItem(\"userImageUrl\");\n    await axios.get(\"/instaPosts/comment/getComments/\" + this.post.postId, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        userId: localStorage.getItem(\"userId\")\n      }\n    }).then(res => {\n      this.getComments = res.data;\n      console.log(this.getComments);\n    });\n  },\n  emits: [\"parent-emit\"],\n  methods: {\n    async likePost() {\n      console.log(this.post.postId);\n      await axios.post(\"/instaPosts/post/likePost/\" + this.post.postId + \"/\" + localStorage.getItem(\"userId\"), {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\")\n        }\n      });\n      window.location.reload();\n    },\n    async handleSubmit() {\n      console.log(this.post.postId);\n      await axios.post(\"/instaPosts/comment/addComment\", {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\")\n        }\n      }, {\n        postId: this.post.postId,\n        userId: localStorage.getItem(\"userId\"),\n        commentText: this.comment\n      });\n      window.location.reload();\n    },\n    async openProfile() {\n      await axios.post(\"/instaUser/user/getProfileByUserId?userId=\" + this.post.userId, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\")\n        }\n      });\n      this.$router.push(\"/friendprofile\");\n      localStorage.setItem(\"imageURL\", this.userImageUrl);\n    }\n  }\n};","map":{"version":3,"mappings":";AAoEA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IAAAC;EAAA;EACA;IACA;IACA;IACA;IACA,YACAC;MACAC;QACAC;QACAC;MACA;IACA,GACAC;MACA;MACAC;IACA;EACA;EACAC;EACAC;IACA;MACAF;MACA,iBACA,+BACA,mBACA,MACAG,gCACA;QACAP;UACAC;UACAC;QACA;MACA,EACA;MACAM;IACA;IAEA;MACAJ;MACA,iBACA,kCACA;QACAJ;UACAC;UACAC;QACA;MACA,GACA;QACAO;QACAP;QACAQ;MACA,EACA;MACAF;IACA;IACA;MACA,iBACA,iEACA;QACAR;UACAC;UACAC;QACA;MACA,EACA;MACA;MACAK;IACA;EACA;AACA","names":["name","data","post","userName","userImageUrl","comment","getComments","components","CommentsLevel1","get","headers","Authorization","userId","then","console","emits","methods","localStorage","window","postId","commentText"],"sourceRoot":"src/views","sources":["ViewComments.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"post-container\">\n      <div @click=\"openProfile(post, index)\" class=\"post-header\">\n        <p>\n          <img class=\"dp\" :src=\"userImageUrl\" alt=\"image not found\" />\n        </p>\n        <p class=\"username\">{{ userName }}</p>\n      </div>\n      <div class=\"post-content\">\n        <p>\n          <img\n            class=\"post-img\"\n            :src=\"post.filePostedURL\"\n            alt=\"image not found\"\n          />\n        </p>\n      </div>\n      <div class=\"post-footer\">\n        <div class=\"footer-actions\">\n          <img\n            class=\"heart\"\n            src=\"../assets/images/heart.png\"\n            alt=\"image not found\"\n            @click=\"likePost()\"\n          />\n          <img\n            class=\"comment\"\n            src=\"../assets/images/comment.png\"\n            alt=\"image not found\"\n          />\n          <img\n            class=\"share\"\n            src=\"../assets/images/send.png\"\n            alt=\"image not found\"\n          />\n        </div>\n        <div class=\"likes\">\n          <p v-if=\"post.likes === null\">0 likes</p>\n          <p v-else>{{ post.likes.length }} likes</p>\n        </div>\n        <div @click=\"showComments()\" class=\"view-comments\">\n          <p v-if=\"post.commentIds === null\">No comments</p>\n          <p v-else>View all {{ post.commentIds.length }} comments</p>\n        </div>\n        <div class=\"add-comment\">\n          <form @submit.prevent=\"handleSubmit(post)\">\n            <input\n              v-model=\"comment\"\n              type=\"text\"\n              placeholder=\"Add a comment...\"\n            />\n            <button>Post</button>\n          </form>\n        </div>\n      </div>\n    </div>\n    <div class=\"comments-container\">\n      <comments-level-1\n        :getComments=\"getComments\"\n        :userImageUrl=\"userImageUrl\"\n        :userName=\"userName\"\n      ></comments-level-1>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CommentsLevel1 from \"@/components/CommentsLevel1.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"ViewComments\",\n  data() {\n    return {\n      post: {},\n      userName: undefined,\n      userImageUrl: undefined,\n      comment: \"\",\n      getComments: undefined,\n    };\n  },\n  components: { CommentsLevel1 },\n  async created() {\n    this.post = JSON.parse(localStorage.getItem(\"post\"));\n    this.userName = localStorage.getItem(\"userName\");\n    this.userImageUrl = localStorage.getItem(\"userImageUrl\");\n    await axios\n      .get(\"/instaPosts/comment/getComments/\" + this.post.postId, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          userId: localStorage.getItem(\"userId\"),\n        },\n      })\n      .then((res) => {\n        this.getComments = res.data;\n        console.log(this.getComments);\n      });\n  },\n  emits: [\"parent-emit\"],\n  methods: {\n    async likePost() {\n      console.log(this.post.postId);\n      await axios.post(\n        \"/instaPosts/post/likePost/\" +\n          this.post.postId +\n          \"/\" +\n          localStorage.getItem(\"userId\"),\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            userId: localStorage.getItem(\"userId\"),\n          },\n        }\n      );\n      window.location.reload();\n    },\n\n    async handleSubmit() {\n      console.log(this.post.postId);\n      await axios.post(\n        \"/instaPosts/comment/addComment\",\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            userId: localStorage.getItem(\"userId\"),\n          },\n        },\n        {\n          postId: this.post.postId,\n          userId: localStorage.getItem(\"userId\"),\n          commentText: this.comment,\n        }\n      );\n      window.location.reload();\n    },\n    async openProfile() {\n      await axios.post(\n        \"/instaUser/user/getProfileByUserId?userId=\" + this.post.userId,\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            userId: localStorage.getItem(\"userId\"),\n          },\n        }\n      );\n      this.$router.push(\"/friendprofile\");\n      localStorage.setItem(\"imageURL\", this.userImageUrl);\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap');\n\nhtml,\nbody {\n    height: 100%\n}\n\nbody {\n    display: grid;\n    place-items: center;\nfont-family: 'Source Sans Pro', sans-serif;\n    background: #9C27B0\n}\n\n\n\n\n .card {\n     position: relative;\n     display: flex;\n     padding:20px;\n     flex-direction: column;\n     min-width: 0;\n     word-wrap: break-word;\n     background-color: #fff;\n     background-clip: border-box;\n     border: 1px solid #d2d2dc;\n     border-radius: 11px;\n     -webkit-box-shadow: 0px 0px 5px 0px rgb(249, 249, 250);\n     -moz-box-shadow: 0px 0px 5px 0px rgba(212, 182, 212, 1);\n     box-shadow: 0px 0px 5px 0px rgb(161, 163, 164)\n }\n\n.media img{\n      \n    width: 60px;\n    height: 60px;\n}\n\n\n.reply a {\n    \n    text-decoration: none;\n}\n</style>\n\n<div v-for=\"(comm, index) in getComments\" :key=\"index\">\n        <p>{{ comm.commentText }}</p>\n      </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}