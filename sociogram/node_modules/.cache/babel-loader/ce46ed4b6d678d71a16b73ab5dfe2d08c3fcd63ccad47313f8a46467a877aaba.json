{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { storage } from \"@/firebase\";\n// import axios from \"axios\";\nimport { ref, uploadBytes, getDownloadURL } from \"@firebase/storage\";\nimport \"firebase/storage\";\n// import PostInfo from \"../views/PostInfo.vue\";\nexport default {\n  data() {\n    return {\n      datePosted: \"\",\n      fileType: \"\",\n      filePostedURL: \"\",\n      caption: \"MAc Book Pro !!!\",\n      url: \"\",\n      file: \"\",\n      fileName: \"\"\n    };\n  },\n  components: {\n    // PostInfo,\n  },\n  methods: {\n    HandleFileChange(event) {\n      this.file = event.target.files[0];\n      this.fileName = this.file.name;\n      if (this.file.type.startsWith(\"image\")) {\n        console.log(\"File type is Image\");\n        this.fileType = \"images\";\n        localStorage.setItem(\"fileType\", this.fileType);\n        return;\n      } else if (this.file.type.startsWith(\"video\")) {\n        console.log(\"File Type is Video\");\n        this.fileType = \"videos\";\n        localStorage.setItem(\"fileType\", this.fileType);\n      }\n    },\n    async upload(event) {\n      // const file = event.target.files[0];\n      const maxfilesize = 6 * 1024 * 1024;\n      if (this.file.size > maxfilesize) {\n        alert(\"Max file size of 3 MB exceeded!!\");\n        return;\n      }\n      if (!this.file) {\n        event.preventDefault();\n        alert(\"No file chosen\");\n        return;\n      }\n      let storageRef = ref(storage, `Images/${this.fileName}`);\n      if (this.fileType === \"videos\") {\n        let storageRef = ref(storage, `Videos/${this.fileName}`);\n        console.log(storageRef);\n      }\n      await uploadBytes(storageRef, this.$refs.inputs.files[0]).then(res => {\n        console.log(\"From upload\");\n        console.log(res);\n      });\n      await getDownloadURL(ref(storage, `Images/${this.fileName}`)).then(res => {\n        this.url = res;\n        console.log(\"from download\");\n        localStorage.setItem(\"fileURL\", this.url);\n        // console.log(localStorage.getItem(\"fileURL\"));\n        // debugger;\n        this.$router.push(\"/postinfo\");\n        console.log(\"After Routing\");\n        console.log(localStorage.getItem(\"fileURL\"));\n        // debugger;\n        console.log(this.url);\n      });\n      // axios.post(\"http://localhost:8080/user/addPost\", {\n      //   userId: this.userId,\n      //   datePosted: new Date(),\n      //   fileType: this.fileType,\n      //   filePostedURL: this.url,\n      //   caption: this.caption,\n      // });\n    }\n  }\n};","map":{"version":3,"mappings":";AASA;AACA;AACA;AACA;AACA;AACA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EAAA,CACA;EACAC;IACAC;MACA;MACA;MACA;QACAC;QACA;QACAC;QACA;MACA;QACAD;QACA;QACAC;MACA;IACA;IACA;MACA;MACA;MACA;QACAC;QACA;MACA;MACA;QACAC;QACAD;QACA;MACA;MACA;MACA;QACA;QACAF;MACA;MAEA;QACAA;QACAA;MACA;MACA,mEACAI;QACA;QACAJ;QACAC;QACA;QACA;QACA;QACAD;QACAA;QACA;QACAA;MACA,EACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["data","datePosted","fileType","filePostedURL","caption","url","file","fileName","components","methods","HandleFileChange","console","localStorage","alert","event","res"],"sourceRoot":"src/views","sources":["ImageUpload.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <img :src=\"url\" class=\"post-image\" /> -->\n    <input type=\"file\" ref=\"inputs\" @change=\"HandleFileChange\" />\n    <button @click=\"upload\">Upload</button>\n  </div>\n</template>\n\n<script>\nimport { storage } from \"@/firebase\";\n// import axios from \"axios\";\nimport { ref, uploadBytes, getDownloadURL } from \"@firebase/storage\";\nimport \"firebase/storage\";\n// import PostInfo from \"../views/PostInfo.vue\";\nexport default {\n  data() {\n    return {\n      datePosted: \"\",\n      fileType: \"\",\n      filePostedURL: \"\",\n      caption: \"MAc Book Pro !!!\",\n      url: \"\",\n      file: \"\",\n      fileName: \"\",\n    };\n  },\n  components: {\n    // PostInfo,\n  },\n  methods: {\n    HandleFileChange(event) {\n      this.file = event.target.files[0];\n      this.fileName = this.file.name;\n      if (this.file.type.startsWith(\"image\")) {\n        console.log(\"File type is Image\");\n        this.fileType = \"images\";\n        localStorage.setItem(\"fileType\", this.fileType);\n        return;\n      } else if (this.file.type.startsWith(\"video\")) {\n        console.log(\"File Type is Video\");\n        this.fileType = \"videos\";\n        localStorage.setItem(\"fileType\", this.fileType);\n      }\n    },\n    async upload(event) {\n      // const file = event.target.files[0];\n      const maxfilesize = 6 * 1024 * 1024;\n      if (this.file.size > maxfilesize) {\n        alert(\"Max file size of 3 MB exceeded!!\");\n        return;\n      }\n      if (!this.file) {\n        event.preventDefault();\n        alert(\"No file chosen\");\n        return;\n      }\n      let storageRef = ref(storage, `Images/${this.fileName}`);\n      if (this.fileType === \"videos\") {\n        let storageRef = ref(storage, `Videos/${this.fileName}`);\n        console.log(storageRef);\n      }\n\n      await uploadBytes(storageRef, this.$refs.inputs.files[0]).then((res) => {\n        console.log(\"From upload\");\n        console.log(res);\n      });\n      await getDownloadURL(ref(storage, `Images/${this.fileName}`)).then(\n        (res) => {\n          this.url = res;\n          console.log(\"from download\");\n          localStorage.setItem(\"fileURL\", this.url);\n          // console.log(localStorage.getItem(\"fileURL\"));\n          // debugger;\n          this.$router.push(\"/postinfo\");\n          console.log(\"After Routing\");\n          console.log(localStorage.getItem(\"fileURL\"));\n          // debugger;\n          console.log(this.url);\n        }\n      );\n      // axios.post(\"http://localhost:8080/user/addPost\", {\n      //   userId: this.userId,\n      //   datePosted: new Date(),\n      //   fileType: this.fileType,\n      //   filePostedURL: this.url,\n      //   caption: this.caption,\n      // });\n    },\n  },\n};\n</script>\n<style scoped>\n.post-image {\n  width: 30vw;\n  height: 50vh;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}