{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;\n(function (root) {\n  'use strict';\n\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = edit(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n  block.html = edit(block.html).replace('comment', /<!--[\\s\\S]*?-->/).replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/).replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/).replace(/tag/g, block._tag).getRegex();\n  block.paragraph = edit(block.paragraph).replace('hr', block.hr).replace('heading', block.heading).replace('lheading', block.lheading).replace('tag', '<' + block._tag).getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n  block.gfm.paragraph = edit(block.paragraph).replace('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|').getRegex();\n\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n\n  Lexer.rules = block;\n\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n\n  Lexer.prototype.token = function (src, top) {\n    src = src.replace(/^ +$/gm, '');\n    var next, loose, cap, bull, b, item, space, i, tag, l, isordered;\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? cap.replace(/\\n+$/, '') : cap\n        });\n        continue;\n      }\n\n      // fences (gfm)\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n        this.tokens.push(item);\n        continue;\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n        this.tokens.push({\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : ''\n        });\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n        next = false;\n        l = cap.length;\n        i = 0;\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n          this.tokens.push({\n            type: loose ? 'loose_item_start' : 'list_item_start'\n          });\n\n          // Recurse.\n          this.token(item, false);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase();\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n        this.tokens.push(item);\n        continue;\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n    return this.tokens;\n  };\n\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n  };\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n  inline.link = edit(inline.link).replace('inside', inline._inside).replace('href', inline._href).getRegex();\n  inline.reflink = edit(inline.reflink).replace('inside', inline._inside).getRegex();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/).replace('email', inline._email).getRegex(),\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: edit(inline.text).replace(']|', '~]|').replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|').getRegex()\n  });\n\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n  });\n\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n\n  InlineLexer.rules = inline;\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n\n  /**\n   * Lexing/Compiling\n   */\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n      link,\n      text,\n      href,\n      cap;\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += cap[1];\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        out += this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n        continue;\n      }\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n    return out;\n  };\n\n  /**\n   * Compile Link\n   */\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n\n  /**\n   * Smartypants Transformations\n   */\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n  };\n\n  /**\n   * Mangle Links\n   */\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n    return out;\n  };\n\n  /**\n   * Renderer\n   */\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n  Renderer.prototype.code = function (code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '\\n</code></pre>';\n    }\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '\\n</code></pre>\\n';\n  };\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n  Renderer.prototype.heading = function (text, level, raw) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-') + '\">' + text + '</h' + level + '>\\n';\n  };\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n  Renderer.prototype.list = function (body, ordered, start) {\n    var type = ordered ? 'ol' : 'ul',\n      startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n  Renderer.prototype.table = function (header, body) {\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + '<tbody>\\n' + body + '</tbody>\\n' + '</table>\\n';\n  };\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' style=\"text-align:' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n  Renderer.prototype.link = function (href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return text;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return text;\n      }\n    }\n    if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n      href = resolveUrl(this.options.baseUrl, href);\n    }\n    var out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n  Renderer.prototype.image = function (href, title, text) {\n    if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n      href = resolveUrl(this.options.baseUrl, href);\n    }\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  function TextRenderer() {}\n\n  // no need for block level renderers\n\n  TextRenderer.prototype.strong = TextRenderer.prototype.em = TextRenderer.prototype.codespan = TextRenderer.prototype.del = TextRenderer.prototype.text = function (text) {\n    return text;\n  };\n  TextRenderer.prototype.link = TextRenderer.prototype.image = function (href, title, text) {\n    return '' + text;\n  };\n  TextRenderer.prototype.br = function () {\n    return '';\n  };\n\n  /**\n   * Parsing & Compiling\n   */\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n\n  /**\n   * Static Parse Method\n   */\n\n  Parser.parse = function (src, options) {\n    var parser = new Parser(options);\n    return parser.parse(src);\n  };\n\n  /**\n   * Parse Loop\n   */\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(src.links, merge({}, this.options, {\n      renderer: new TextRenderer()\n    }));\n    this.tokens = src.reverse();\n    var out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n\n  /**\n   * Preview Next Token\n   */\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape(this.inlineText.output(this.token.text)));\n        }\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n      case 'table':\n        {\n          var header = '',\n            body = '',\n            i,\n            row,\n            cell,\n            j;\n\n          // header\n          cell = '';\n          for (i = 0; i < this.token.header.length; i++) {\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            });\n          }\n          header += this.renderer.tablerow(cell);\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              });\n            }\n            body += this.renderer.tablerow(cell);\n          }\n          return this.renderer.table(header, body);\n        }\n      case 'blockquote_start':\n        {\n          body = '';\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n          return this.renderer.blockquote(body);\n        }\n      case 'list_start':\n        {\n          body = '';\n          var ordered = this.token.ordered,\n            start = this.token.start;\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n          return this.renderer.list(body, ordered, start);\n        }\n      case 'list_item_start':\n        {\n          body = '';\n          while (this.next().type !== 'list_item_end') {\n            body += this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n          return this.renderer.listitem(body);\n        }\n      case 'loose_item_start':\n        {\n          body = '';\n          while (this.next().type !== 'list_item_end') {\n            body += this.tok();\n          }\n          return this.renderer.listitem(body);\n        }\n      case 'html':\n        {\n          var html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;\n          return this.renderer.html(html);\n        }\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function escape(html, encode) {\n    return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n  }\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n  function edit(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return {\n      replace: function (name, val) {\n        val = val.source || val;\n        val = val.replace(/(^|[^\\[])\\^/g, '$1');\n        regex = regex.replace(name, val);\n        return this;\n      },\n      getRegex: function () {\n        return new RegExp(regex, opt);\n      }\n    };\n  }\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n      }\n    }\n    base = baseUrls[' ' + base];\n    if (href.slice(0, 2) === '//') {\n      return base.replace(/:[\\s\\S]*/, ':') + href;\n    } else if (href.charAt(0) === '/') {\n      return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var baseUrls = {};\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  function noop() {}\n  noop.exec = noop;\n  function merge(obj) {\n    var i = 1,\n      target,\n      key;\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n      opt = merge({}, marked.defaults, opt || {});\n      var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n      pending = tokens.length;\n      var done = function (err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n        var out;\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n      delete opt.highlight;\n      if (!pending) return done();\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n      return;\n    }\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    sanitizer: null,\n    mangle: true,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer(),\n    xhtml: false,\n    baseUrl: null\n  };\n\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.parse = marked;\n  if (typeof module !== 'undefined' && typeof exports === 'object') {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    root.marked = marked;\n  }\n})(this || (typeof window !== 'undefined' ? window : global));","map":{"version":3,"names":["root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","normal","merge","gfm","tables","Lexer","options","tokens","links","marked","defaults","rules","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","space","i","tag","l","isordered","exec","substring","length","push","type","pedantic","lang","depth","header","split","align","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","_scheme","_email","_inside","_href","_backpedal","breaks","InlineLexer","renderer","Renderer","output","out","mangle","inLink","outputLink","codespan","trim","smartypants","image","ch","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerPrefix","xhtml","body","startatt","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","unescape","e","baseUrl","originIndependentUrl","resolveUrl","TextRenderer","Parser","parse","parser","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","encode","_","n","String","fromCharCode","parseInt","regex","opt","name","val","base","baseUrls","obj","target","key","arguments","Object","hasOwnProperty","call","callback","pending","done","err","message","silent","setOptions","inlineLexer","module","exports","define","amd","window","global"],"sources":["/Users/ayanyadav/node_modules/marked/lib/marked.js"],"sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /<!--[\\s\\S]*?-->/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}