{"ast":null,"code":"// loads a view from a remote http source\n// the source of the view is irrelvenant, it should be any HTTP complaiant webserver\n\n// Remark: hyperquest and through are required for remote views\nvar request = require('hyperquest');\nvar through = require('through2');\nvar colors = require('colors');\n\n// TODO: consider giving a streaming interface to the file instead of buffering the output here\n\n/*\n\n  types of incoming urls:\n    /\n    /index.html\n    /blog\n    /blog/\n    /blog/index.html\n    /css/styles.css\n\n\n  1. check if this is a static assett or a dynamic view\n    - if static asset, open up stream and serve it without anything else\n    - if dynamic view, attempt to load layout and presenter for view\n\n*/\n\nmodule['exports'] = function remoteView(remotePath, callback) {\n  var viewFormats = ['.html'],\n    self = this,\n    basePath;\n  if (typeof remotePath === \"undefined\") {\n    return callback(new Error('remotePath argument is required!'));\n  }\n  var lastItem = remotePath.split('/');\n  if (lastItem.length > 0) {\n    lastItem = lastItem.pop();\n  }\n\n  // if no . is found, then assume its a folder of index view\n  if (lastItem.search(/\\./) === -1) {\n    if (lastItem.substr(lastItem.length - 1, lastItem.length) === \"/\") {\n      remotePath += \"index.html\";\n    } else {\n      remotePath += \"/index.html\";\n    }\n  }\n  basePath = remotePath.split('/');\n  basePath.pop();\n  basePath = basePath.join('/');\n  basePath = self._remote + basePath;\n  function _remoteView() {\n    // if no .html extension is found, then assume its a static asset and we should continue\n    if (remotePath.search(/\\.html/) === -1) {\n      return serveStatic();\n    }\n    return serveView(callback);\n  }\n  _remoteView(remotePath);\n  function serveStatic() {\n    // console.log('serving static assett', remotePath);\n\n    var lastItem = remotePath.split('/');\n    if (lastItem.length > 0) {\n      lastItem = lastItem.pop();\n    }\n\n    // if no . is found, then assume its a folder of index view\n    if (lastItem.search(/\\./) === -1) {\n      remotePath += \"/index.html\";\n    }\n    var remoteFilePath = self._remote + remotePath;\n    var remoteFileOutput = '';\n    var remoteFile = request(remoteFilePath);\n    remoteFile.on('error', function (err) {\n      console.log('remoteFile error'.red);\n      throw err;\n    });\n    remoteFile.pipe(through(function (chunk, enc, cb) {\n      remoteFileOutput += chunk;\n      cb(null);\n    }));\n    remoteFile.on('end', function (err, res) {\n      // TODO: this is hard-coded to the Github response,\n      // it should be using the HTTP status code 404 instead....\n      if (remoteFileOutput === \"Not Found\") {\n        if (remoteFilePath.substr(remoteFilePath.length - 1, remoteFilePath.length) !== \"/\") {\n          remotePath += \"/\";\n          return _remoteView(remotePath, callback);\n        } else {\n          return callback(new Error('Could not find file: ' + remoteFilePath));\n        }\n      } else {\n        return callback(err, remoteFileOutput);\n      }\n    });\n  }\n  ;\n  function fetchTemplate(callback) {\n    var remoteTemplatePath = self._remote + remotePath;\n    // console.log('remote template'.yellow, remoteTemplatePath);\n    var remoteTemplateOutput = '';\n    var remoteTemplate = request(remoteTemplatePath);\n    remoteTemplate.on('error', function (err) {\n      return callback(err);\n    });\n    remoteTemplate.pipe(through(function (chunk, enc, cb) {\n      remoteTemplateOutput += chunk;\n      cb(null);\n    }));\n    remoteTemplate.on('end', function (err, res) {\n      return callback(err, remoteTemplateOutput);\n      // TODO: this is hard-coded to the Github response,\n      // it should be using the HTTP status code 404 instead....\n      if (remoteTemplateOutput === \"Not Found\") {} else {}\n    });\n  }\n  ;\n\n  // TODO: remote presenters\n  function fetchPresenter(cb) {\n    var remotePresenterPath = basePath + \"index.js\";\n    console.log('remote presenter'.yellow, remotePresenterPath);\n    var remotePresenter = request(remotePresenterPath);\n  }\n  ;\n  function fetchLayout(cb) {\n    var remoteLayoutPath;\n    if (basePath.substr(basePath.length - 1, basePath.length) !== \"/\") {\n      remoteLayoutPath = basePath + \"/layout.html\";\n    } else {\n      remoteLayoutPath = basePath + \"layout.html\";\n    }\n    // console.log('remoteLayoutPath'.yellow, remoteLayoutPath);\n    var remoteLayout = request(remoteLayoutPath);\n    var remoteLayoutTemplateOutput = '';\n    remoteLayout.on('error', function (err) {\n      return cb(err);\n    });\n    remoteLayout.pipe(through(function (chunk, enc, cb) {\n      remoteLayoutTemplateOutput += chunk;\n      cb(null);\n    }));\n    remoteLayout.on('end', function () {\n      return cb(null, remoteLayoutTemplateOutput);\n    });\n  }\n  ;\n\n  // TODO: remote layout presenters\n  function fetchLayoutPresenter(cb) {}\n  ;\n  function serveView(cb) {\n    //console.log('serving dynamic view', remotePath);\n    fetchLayout(function (err, remoteLayoutTemplateOutput) {\n      if (err) {\n        return cb(err);\n      }\n      // console.log('callbacked fetchLayout', err, remoteLayoutTemplateOutput)\n      fetchTemplate(function (err, remoteTemplateOutput) {\n        if (err) {\n          return cb(err);\n        }\n        // console.log('callbacked fetchTemplate', err, remoteTemplateOutput)\n        // TODO: this is hard-coded to the Github response,\n        // it should be using the HTTP status code 404 instead....\n        if (remoteLayoutTemplateOutput === \"Not Found\") {\n          // don't use the layout\n          // console.log('not using layout', remoteTemplateOutput)\n          cb(null, remoteTemplateOutput);\n        } else {\n          // console.log('applying layout'.yellow, remoteLayoutTemplateOutput)\n          var query = require('../lib/query');\n          var $;\n          $ = query(remoteLayoutTemplateOutput.toString());\n          $('.yield').html(remoteTemplateOutput);\n          cb(null, $.html());\n        }\n      });\n    });\n  }\n  ;\n};","map":{"version":3,"names":["request","require","through","colors","module","remoteView","remotePath","callback","viewFormats","self","basePath","Error","lastItem","split","length","pop","search","substr","join","_remote","_remoteView","serveStatic","serveView","remoteFilePath","remoteFileOutput","remoteFile","on","err","console","log","red","pipe","chunk","enc","cb","res","fetchTemplate","remoteTemplatePath","remoteTemplateOutput","remoteTemplate","fetchPresenter","remotePresenterPath","yellow","remotePresenter","fetchLayout","remoteLayoutPath","remoteLayout","remoteLayoutTemplateOutput","fetchLayoutPresenter","query","$","toString","html"],"sources":["/Users/ayanyadav/node_modules/view/lib/remote.js"],"sourcesContent":["// loads a view from a remote http source\n// the source of the view is irrelvenant, it should be any HTTP complaiant webserver\n\n// Remark: hyperquest and through are required for remote views\nvar request = require('hyperquest');\nvar through = require('through2');\nvar colors = require('colors');\n\n// TODO: consider giving a streaming interface to the file instead of buffering the output here\n\n/*\n\n  types of incoming urls:\n    /\n    /index.html\n    /blog\n    /blog/\n    /blog/index.html\n    /css/styles.css\n\n\n  1. check if this is a static assett or a dynamic view\n    - if static asset, open up stream and serve it without anything else\n    - if dynamic view, attempt to load layout and presenter for view\n\n*/\n\nmodule['exports'] = function remoteView (remotePath, callback) {\n\n  var viewFormats = ['.html'], self = this, basePath;\n\n  if (typeof remotePath === \"undefined\") {\n    return callback(new Error('remotePath argument is required!'));\n  }\n\n  var lastItem = remotePath.split('/');\n  if (lastItem.length > 0) {\n    lastItem = lastItem.pop();\n  }\n\n  // if no . is found, then assume its a folder of index view\n  if (lastItem.search(/\\./) === -1) {\n    if(lastItem.substr(lastItem.length-1, lastItem.length) === \"/\") {\n      remotePath += \"index.html\";\n    } else {\n      remotePath += \"/index.html\";\n    }\n  }\n\n  basePath = remotePath.split('/');\n  basePath.pop();\n  basePath = basePath.join('/');\n  basePath = self._remote + basePath;\n\n  function _remoteView() {\n    // if no .html extension is found, then assume its a static asset and we should continue\n    if (remotePath.search(/\\.html/) === -1) {\n      return serveStatic();\n    }\n    return serveView(callback);\n  }\n\n  _remoteView(remotePath);\n\n  function serveStatic () {\n\n    // console.log('serving static assett', remotePath);\n\n    var lastItem = remotePath.split('/');\n    if (lastItem.length > 0) {\n      lastItem = lastItem.pop();\n    }\n\n    // if no . is found, then assume its a folder of index view\n    if (lastItem.search(/\\./) === -1) {\n      remotePath += \"/index.html\";\n    }\n\n    var remoteFilePath = self._remote + remotePath;\n    var remoteFileOutput = '';\n    var remoteFile = request(remoteFilePath);\n\n    remoteFile.on('error', function(err){\n      console.log('remoteFile error'.red);\n      throw err;\n    });\n\n    remoteFile.pipe(through(function(chunk, enc, cb){\n      remoteFileOutput += chunk;\n      cb(null);\n    }));\n    remoteFile.on('end', function (err, res){\n      // TODO: this is hard-coded to the Github response,\n      // it should be using the HTTP status code 404 instead....\n      if (remoteFileOutput === \"Not Found\") {\n        if (remoteFilePath.substr(remoteFilePath.length-1, remoteFilePath.length) !== \"/\") {\n          remotePath += \"/\";\n          return _remoteView(remotePath, callback);\n        } else {\n          return callback(new Error('Could not find file: ' + remoteFilePath));\n        }\n      } else {\n        return callback(err, remoteFileOutput);\n      }\n    });\n  };\n\n  function fetchTemplate (callback) {\n\n    var remoteTemplatePath = self._remote + remotePath;\n    // console.log('remote template'.yellow, remoteTemplatePath);\n    var remoteTemplateOutput = '';\n    var remoteTemplate = request(remoteTemplatePath);\n\n    remoteTemplate.on('error', function(err){\n      return callback(err);\n    });\n\n    remoteTemplate.pipe(through(function(chunk, enc, cb){\n      remoteTemplateOutput += chunk;\n      cb(null);\n    }));\n\n    remoteTemplate.on('end', function(err, res){\n      return callback(err, remoteTemplateOutput);\n      // TODO: this is hard-coded to the Github response,\n      // it should be using the HTTP status code 404 instead....\n      if (remoteTemplateOutput === \"Not Found\") {\n      } else {\n      }\n    });\n  };\n\n  // TODO: remote presenters\n  function fetchPresenter (cb) {\n    var remotePresenterPath = basePath + \"index.js\";\n    console.log('remote presenter'.yellow, remotePresenterPath);\n    var remotePresenter = request(remotePresenterPath);\n  };\n\n  function fetchLayout (cb) {\n    var remoteLayoutPath;\n    if (basePath.substr(basePath.length-1, basePath.length) !== \"/\") {\n      remoteLayoutPath = basePath + \"/layout.html\";\n    } else {\n      remoteLayoutPath = basePath + \"layout.html\";\n    }\n    // console.log('remoteLayoutPath'.yellow, remoteLayoutPath);\n    var remoteLayout = request(remoteLayoutPath);\n    var remoteLayoutTemplateOutput = '';\n    remoteLayout.on('error', function(err){\n      return cb(err);\n    });\n    remoteLayout.pipe(through(function(chunk, enc, cb){\n      remoteLayoutTemplateOutput += chunk;\n      cb(null);\n    }));\n    remoteLayout.on('end', function(){\n      return cb(null, remoteLayoutTemplateOutput);\n    });\n  };\n\n  // TODO: remote layout presenters\n  function fetchLayoutPresenter (cb) {};\n\n  function serveView (cb) {\n    //console.log('serving dynamic view', remotePath);\n    fetchLayout(function(err, remoteLayoutTemplateOutput) {\n      if (err) {\n        return cb(err);\n      }\n      // console.log('callbacked fetchLayout', err, remoteLayoutTemplateOutput)\n      fetchTemplate(function(err, remoteTemplateOutput) {\n        if (err) {\n          return cb(err);\n        }\n        // console.log('callbacked fetchTemplate', err, remoteTemplateOutput)\n          // TODO: this is hard-coded to the Github response,\n          // it should be using the HTTP status code 404 instead....\n          if (remoteLayoutTemplateOutput === \"Not Found\" ) {\n            // don't use the layout\n            // console.log('not using layout', remoteTemplateOutput)\n            cb(null, remoteTemplateOutput);\n          } else {\n            // console.log('applying layout'.yellow, remoteLayoutTemplateOutput)\n            var query = require('../lib/query');\n            var $;\n            $ = query(remoteLayoutTemplateOutput.toString());\n            $('.yield').html(remoteTemplateOutput);\n            cb(null, $.html());\n          }\n      });\n    });\n  };\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}