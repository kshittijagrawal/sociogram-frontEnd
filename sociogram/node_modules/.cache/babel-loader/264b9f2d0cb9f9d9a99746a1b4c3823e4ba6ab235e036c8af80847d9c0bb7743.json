{"ast":null,"code":"import { mapActions, mapGetters } from \"vuex\";\nimport { storage } from \"@/firebase\";\n// import axios from \"axios\";\nimport { ref, uploadBytes, getDownloadURL } from \"@firebase/storage\";\nimport \"firebase/storage\";\nexport default {\n  name: \"EditProfile\",\n  components: {},\n  data() {\n    return {\n      formData: {\n        bio: \"\",\n        imageURL: undefined,\n        userId: localStorage.getItem(\"userId\")\n      }\n    };\n  },\n  computed: {\n    ...mapGetters([\"getAddProfile\"])\n  },\n  methods: {\n    ...mapActions([\"ADD_PROFILE\"]),\n    editProfile() {\n      const payloadData = this.formData;\n      console.log(payloadData);\n      this.$store.dispatch(\"ADD_PROFILE\", {\n        payload: payloadData\n      });\n    },\n    HandleFileChange(e) {\n      const file = e.target.files[0];\n      // const file = this.$refs.file.files[0];\n\n      if (!file) {\n        e.preventDefault();\n        alert(\"No file chosen\");\n        return;\n      } else if (file.size > 1024 * 1024) {\n        e.preventDefault();\n        alert(\"File too big (> 1MB)\");\n        return;\n      }\n      this.fileName = file.name;\n    },\n    async upload() {\n      const storageRef = ref(storage, `Images/${this.fileName}`);\n      await uploadBytes(storageRef, this.$refs.inputs.file).then(res => {\n        console.log(\"From upload\");\n        console.log(res);\n      });\n      await getDownloadURL(ref(storage, `Images/${this.fileName}`)).then(res => {\n        //   debugger;\n        this.imageURL = res;\n        console.log(\"from download\");\n        console.log(this.imageURL);\n        localStorage.setItem(\"imageURL\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAkBA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;MACAC;MACA;QAAAC;MAAA;IACA;IACAC;MACA;MACA;;MAEA;QACAC;QACAC;QACA;MACA;QACAD;QACAC;QACA;MACA;MACA;IACA;IACA;MACA;MACA;QACAJ;QACAA;MACA;MACA,mEACAK;QACA;QACA;QACAL;QACAA;QACAM;MACA,EACA;IACA;EACA;AACA","names":["name","components","data","formData","bio","imageURL","userId","computed","methods","editProfile","console","payload","HandleFileChange","e","alert","res","localStorage"],"sourceRoot":"src/views","sources":["EditProfile.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"registerChild\">\n      <form @submit.prevent=\"editProfile\">\n        <label>Bio : </label>\n        <input v-model=\"formData.bio\" type=\"text\" /><br /><br />\n\n        <!-- <label>Profile picture : </label>\n        <input v-model=\"formData.imageURL\" type=\"url\" /><br /><br /> -->\n        <input type=\"file\" ref=\"inputs\" @change=\"HandleFileChange\" />\n\n        <button @click=\"upload\">Submit</button> <br />\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport { storage } from \"@/firebase\";\n// import axios from \"axios\";\nimport { ref, uploadBytes, getDownloadURL } from \"@firebase/storage\";\nimport \"firebase/storage\";\nexport default {\n  name: \"EditProfile\",\n  components: {},\n  data() {\n    return {\n      formData: {\n        bio: \"\",\n        imageURL: undefined,\n        userId: localStorage.getItem(\"userId\"),\n      },\n    };\n  },\n  computed: {\n    ...mapGetters([\"getAddProfile\"]),\n  },\n  methods: {\n    ...mapActions([\"ADD_PROFILE\"]),\n    editProfile() {\n      const payloadData = this.formData;\n      console.log(payloadData);\n      this.$store.dispatch(\"ADD_PROFILE\", { payload: payloadData });\n    },\n    HandleFileChange(e) {\n      const file = e.target.files[0];\n      // const file = this.$refs.file.files[0];\n\n      if (!file) {\n        e.preventDefault();\n        alert(\"No file chosen\");\n        return;\n      } else if (file.size > 1024 * 1024) {\n        e.preventDefault();\n        alert(\"File too big (> 1MB)\");\n        return;\n      }\n      this.fileName = file.name;\n    },\n    async upload() {\n      const storageRef = ref(storage, `Images/${this.fileName}`);\n      await uploadBytes(storageRef, this.$refs.inputs.file).then((res) => {\n        console.log(\"From upload\");\n        console.log(res);\n      });\n      await getDownloadURL(ref(storage, `Images/${this.fileName}`)).then(\n        (res) => {\n          //   debugger;\n          this.imageURL = res;\n          console.log(\"from download\");\n          console.log(this.imageURL);\n          localStorage.setItem(\"imageURL\",)\n        }\n      );\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}