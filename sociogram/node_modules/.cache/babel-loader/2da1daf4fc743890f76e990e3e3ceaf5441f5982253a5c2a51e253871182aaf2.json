{"ast":null,"code":"module.exports = function (hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_CLOSE_RE = 'END-ISO-10303-21;';\n  var STEP21_KEYWORDS = {\n    literal: '',\n    built_in: '',\n    keyword: 'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'preprocessor',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CODE = [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'), hljs.C_NUMBER_MODE, hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null\n  }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  }), {\n    className: 'string',\n    begin: \"'\",\n    end: \"'\"\n  }, {\n    className: 'label',\n    variants: [{\n      begin: '#',\n      end: '\\\\d+',\n      illegal: '\\\\W'\n    }]\n  }];\n  return {\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true,\n    // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [{\n      className: 'preprocessor',\n      begin: STEP21_CLOSE_RE,\n      relevance: 10\n    }, STEP21_START].concat(STEP21_CODE)\n  };\n};","map":{"version":3,"names":["module","exports","hljs","STEP21_IDENT_RE","STEP21_CLOSE_RE","STEP21_KEYWORDS","literal","built_in","keyword","STEP21_START","className","begin","relevance","STEP21_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","C_NUMBER_MODE","inherit","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants","aliases","case_insensitive","lexemes","keywords","contains","concat"],"sources":["/Users/ayanyadav/node_modules/highlight.js/lib/languages/step21.js"],"sourcesContent":["module.exports = function(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_CLOSE_RE = 'END-ISO-10303-21;';\n  var STEP21_KEYWORDS = {\n    literal: '',\n    built_in: '',\n    keyword:\n    'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'preprocessor',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CODE = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n    hljs.C_NUMBER_MODE,\n    hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n    hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n    {\n      className: 'string',\n      begin: \"'\", end: \"'\"\n    },\n    {\n      className: 'label',\n      variants: [\n        {\n          begin: '#', end: '\\\\d+',\n          illegal: '\\\\W'\n        }\n      ]\n    }\n  ];\n\n  return {\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [\n      {\n        className: 'preprocessor',\n        begin: STEP21_CLOSE_RE,\n        relevance: 10\n      },\n      STEP21_START\n    ].concat(STEP21_CODE)\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,eAAe,GAAG,mBAAmB;EACzC,IAAIC,eAAe,GAAG,mBAAmB;EACzC,IAAIC,eAAe,GAAG;IACpBC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,OAAO,EACP;EACF,CAAC;EACD,IAAIC,YAAY,GAAG;IACjBC,SAAS,EAAE,cAAc;IACzBC,KAAK,EAAE,eAAe;IACtBC,SAAS,EAAE;EACb,CAAC;EACD,IAAIC,WAAW,GAAG,CAChBX,IAAI,CAACY,mBAAmB,EACxBZ,IAAI,CAACa,oBAAoB,EACzBb,IAAI,CAACc,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,EAChCd,IAAI,CAACe,aAAa,EAClBf,IAAI,CAACgB,OAAO,CAAChB,IAAI,CAACiB,gBAAgB,EAAE;IAACC,OAAO,EAAE;EAAI,CAAC,CAAC,EACpDlB,IAAI,CAACgB,OAAO,CAAChB,IAAI,CAACmB,iBAAiB,EAAE;IAACD,OAAO,EAAE;EAAI,CAAC,CAAC,EACrD;IACEV,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,GAAG;IAAEW,GAAG,EAAE;EACnB,CAAC,EACD;IACEZ,SAAS,EAAE,OAAO;IAClBa,QAAQ,EAAE,CACR;MACEZ,KAAK,EAAE,GAAG;MAAEW,GAAG,EAAE,MAAM;MACvBF,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,CACF;EAED,OAAO;IACLI,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;IAC/BC,gBAAgB,EAAE,IAAI;IAAE;IACxBC,OAAO,EAAEvB,eAAe;IACxBwB,QAAQ,EAAEtB,eAAe;IACzBuB,QAAQ,EAAE,CACR;MACElB,SAAS,EAAE,cAAc;MACzBC,KAAK,EAAEP,eAAe;MACtBQ,SAAS,EAAE;IACb,CAAC,EACDH,YAAY,CACb,CAACoB,MAAM,CAAChB,WAAW;EACtB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}