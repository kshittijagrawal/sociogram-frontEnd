{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = 'exports register file shl array record property for mod while set ally label uses raise not ' + 'stored class safecall var interface or private static exit index inherited to else stdcall ' + 'override shr asm far resourcestring finalization packed virtual out and protected library do ' + 'xorwrite goto near function end div overload object unit begin string on inline repeat until ' + 'destructor write message program with read initialization except default nil if case cdecl in ' + 'downto threadvar of try pascal const external constructor type public then implementation ' + 'finally published procedure';\n  var COMMENT_MODES = [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT(/\\{/, /\\}/, {\n    relevance: 0\n  }), hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n    relevance: 10\n  })];\n  var STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  var CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  var CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [hljs.TITLE_MODE, {\n      className: 'params',\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: [STRING, CHAR_STRING]\n    }].concat(COMMENT_MODES)\n  };\n  return {\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [STRING, CHAR_STRING, hljs.NUMBER_MODE, CLASS, FUNCTION].concat(COMMENT_MODES)\n  };\n};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","STRING","className","begin","end","contains","CHAR_STRING","CLASS","IDENT_RE","returnBegin","TITLE_MODE","FUNCTION","beginKeywords","keywords","concat","case_insensitive","illegal","NUMBER_MODE"],"sources":["/Users/ayanyadav/node_modules/highlight.js/lib/languages/delphi.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\{/,\n      /\\}/,\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT(\n      /\\(\\*/,\n      /\\*\\)/,\n      {\n        relevance: 10\n      }\n    )\n  ];\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(', returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure', end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING]\n      }\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING, CHAR_STRING,\n      hljs.NUMBER_MODE,\n      CLASS,\n      FUNCTION\n    ].concat(COMMENT_MODES)\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,QAAQ,GACV,8FAA8F,GAC9F,6FAA6F,GAC7F,+FAA+F,GAC/F,+FAA+F,GAC/F,gGAAgG,GAChG,4FAA4F,GAC5F,6BAA6B;EAC/B,IAAIC,aAAa,GAAG,CAClBF,IAAI,CAACG,mBAAmB,EACxBH,IAAI,CAACI,OAAO,CACV,IAAI,EACJ,IAAI,EACJ;IACEC,SAAS,EAAE;EACb,CAAC,CACF,EACDL,IAAI,CAACI,OAAO,CACV,MAAM,EACN,MAAM,EACN;IACEC,SAAS,EAAE;EACb,CAAC,CACF,CACF;EACD,IAAIC,MAAM,GAAG;IACXC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,GAAG;IACpBC,QAAQ,EAAE,CAAC;MAACF,KAAK,EAAE;IAAI,CAAC;EAC1B,CAAC;EACD,IAAIG,WAAW,GAAG;IAChBJ,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAC9B,CAAC;EACD,IAAII,KAAK,GAAG;IACVJ,KAAK,EAAER,IAAI,CAACa,QAAQ,GAAG,uBAAuB;IAAEC,WAAW,EAAE,IAAI;IACjEJ,QAAQ,EAAE,CACRV,IAAI,CAACe,UAAU;EAEnB,CAAC;EACD,IAAIC,QAAQ,GAAG;IACbT,SAAS,EAAE,UAAU;IACrBU,aAAa,EAAE,2CAA2C;IAAER,GAAG,EAAE,MAAM;IACvES,QAAQ,EAAE,oDAAoD;IAC9DR,QAAQ,EAAE,CACRV,IAAI,CAACe,UAAU,EACf;MACER,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,IAAI;MAAEC,GAAG,EAAE,IAAI;MACtBS,QAAQ,EAAEjB,QAAQ;MAClBS,QAAQ,EAAE,CAACJ,MAAM,EAAEK,WAAW;IAChC,CAAC,CACF,CAACQ,MAAM,CAACjB,aAAa;EACxB,CAAC;EACD,OAAO;IACLkB,gBAAgB,EAAE,IAAI;IACtBF,QAAQ,EAAEjB,QAAQ;IAClBoB,OAAO,EAAE,0BAA0B;IACnCX,QAAQ,EAAE,CACRJ,MAAM,EAAEK,WAAW,EACnBX,IAAI,CAACsB,WAAW,EAChBV,KAAK,EACLI,QAAQ,CACT,CAACG,MAAM,CAACjB,aAAa;EACxB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}